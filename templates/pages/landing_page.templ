package pages

import (
	"fmt"
	"github.com/mikestefanello/pagoda/pkg/controller"
	"github.com/mikestefanello/pagoda/pkg/types"
	"github.com/mikestefanello/pagoda/templates/components"
	"github.com/mikestefanello/pagoda/pkg/routing/routenames"
)

templ LandingPage(page *controller.Page) {
	<div class="top-0 z-50 flex flex-row justify-center items-center flex-wrap ">
		if !page.IsIosDevice {
			@components.PWAMobileInstallButton(page)
		}
		@nativeMobileLoginButton(page)
		// TODO: only show this once documentation is ready
		// <div class="block lg:hidden">
		// 	@components.DocsButton(page)
		// </div>
		<div class="my-5 block lg:hidden sticky top-0 z-10 flex flex-row justify-center items-center m-2">
			@components.BlogButton()
		</div>
		@mobileDarkModeButton()
	</div>
	if data, ok := page.Data.(types.LandingPage); ok {
		<div id="homePage" class="font-mono">
			@AnimateOnScrollLibrary()
			@welcomeScreen(page, data)
			@verticalSpacer("h-32")
			@builtAndShipsWith()
			@verticalSpacer("h-10")
			@features()
			@verticalSpacer("h-10")
			@builtWithGoShip()
			@verticalSpacer("h-10")
			if data.IsPaymentEnabled {
				@verticalSpacer("h-10")
				<div class="bg-primary text-primary-content flex justify-center">
					@pricingForLandingPage(page, data)
				</div>
			}
			@QASection(data.QAItems)
			@verticalSpacer("h-10")
			<div class="bg-primary text-primary-content">
				@madeWithLove(data)
			</div>
			<div class="bg-primary text-primary-content">
				@socialMedia(data)
				@components.TextFooter(page)
			</div>
			<div>
				@landingPageJS()
			</div>
		</div>
	}
}

templ nativeMobileLoginButton(page *controller.Page) {
	<div id="mobileLoginButton">
		<div class="block lg:hidden sticky top-0 z-10 flex flex-row justify-center items-center m-2">
			<div class="w-32 sm:w-48 md:w-60">
				@components.LogInButton(page, "p-2 text-lg")
			</div>
		</div>
	</div>
}

templ mobileDarkModeButton() {
	<div id="mobileDarkModeButton">
		<div class="block lg:hidden sticky top-0 z-10 flex flex-row justify-center items-center m-2">
			@components.ThemeToggle("landing-page-theme-toggle")
		</div>
	</div>
}

templ AnimateOnScrollLibrary() {
	<!-- Animate on scroll library -->
	<link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet"/>
	<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
	<script>
        AOS.init();
    </script>
}

templ welcomeScreen(page *controller.Page, d types.LandingPage) {
	<div class="max-w-screen-xl px-4 py-8 mx-auto flex justify-center">
		<div class="flex flex-col justify-center w-full">
			<div class="block lg:hidden mb-4 my-10 sm:my-16 flex justify-center">
				<span class="flex justify-center items-center space-x-3 bg-slate-100 dark:bg-white rounded-full w-fit py-2 px-5">
					<img src="/files/icon.png" class="h-8 w-8 sm:h-12 sm:w-12" alt="Logo"/>
					<span class="text-2xl font-semibold text-black">{ d.AppName }</span>
				</span>
			</div>
			<h1
				class="w-full flex justify-center mb-4 text-4xl font-extrabold tracking-tight leading-none md:text-5xl xl:text-6xl text-center
					bg-gradient-to-r from-blue-300 via-green-400 to-indigo-400
					inline-block text-transparent bg-clip-text strong-black-shadow"
			>
				{ d.Title }
			</h1>
			<p class="w-full flex justify-center mb-6 font-light text-center lg:text-left text-gray-500 lg:mb-8 md:text-lg lg:text-xl dark:text-gray-400">
				<span class="w-3/4">{ d.Subtitle }</span>
			</p>
			<span class="flex justify-center">
				@getStartedButton(page)
				@viewTheRepo()
			</span>
		</div>
		<div class="hidden lg:mt-0 lg:col-span-5 lg:flex w-1/3">
			<img src="https://goship-static.s3.us-west-002.backblazeb2.com/assets/gopher.png" alt="mockup"/>
		</div>
	</div>
	<div class="w-full flex justify-center p-3">
		<iframe
			class="w-full md:w-[85%] lg:w-[75%] xl:w-[60%] aspect-video shadow-2xl rounded-xl"
			src="http://www.youtube.com/embed/Mnti8f-4bp0"
			frameborder="0"
			allowfullscreen
		></iframe>
	</div>
}

templ builtAndShipsWith() {
	<div class="w-full grayscale-container">
		<div class="flex justify-center font-bold">Built and Ships with</div>
		<div class="flex justify-center mt-5">
			<div class="flex flex-wrap justify-center items-center w-4/5">
				<div class="p-6 lg:p-12">
					@components.GoLogo("h-8 lg:h-9")
				</div>
				<div class="p-6 lg:p-12">
					@components.HtmxLogo("h-11 lg:h-13")
				</div>
				<div class="p-6 lg:p-12">
					@components.TemplLogo("h-7 lg:h-9")
				</div>
				<div class="p-6 lg:p-12">
					@components.EntOrmLogo("h-9 lg:h-10")
				</div>
				<div class="p-6 lg:p-12">
					@components.TailwindLogo("h-9 lg:h-10")
				</div>
				<div class="p-6 lg:p-12">
					@components.S3Logo("h-9 lg:h-10")
				</div>
				<div class="p-6 lg:p-12">
					@components.StripeLogo("h-9 lg:h-10")
				</div>
			</div>
		</div>
	</div>
	<style>
	.grayscale-container img,
	.grayscale-container svg {
		filter: grayscale(100%);
		transition: filter 0.1s ease-in-out;
	}

	.grayscale-container img:hover,
	.grayscale-container svg:hover {
		filter: grayscale(0%);
	}
	</style>
}

templ getStartedButton(page *controller.Page) {
	<a
		href={ templ.URL(page.ToURL(routenames.RouteNameDocs)) }
		target="_blank"
		class="m-3 group relative flex w-fit items-center items-center justify-center px-5 py-3 text-sm font-semibold text-center text-gray-900 border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 dark:text-white dark:border-gray-700 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
	>
		Get Started
		<span aria-hidden="true" class="ml-1">→</span>
	</a>
}

templ viewTheRepo() {
	<a
		href="https://github.com/leomorpho/GoShip"
		target="_blank"
		class="m-3 group relative flex w-fit items-center items-center justify-center px-5 py-3 text-sm font-semibold text-center text-gray-900 border border-gray-300 rounded-lg hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 dark:text-white dark:border-gray-700 dark:hover:bg-gray-700 dark:focus:ring-gray-800"
	>
		View the Repo
		<span class="absolute -top-3 -right-7 inline-flex items-center gap-x-1 rounded-full ring-1 group-hover:ring-2 ring-inset ring-yellow-300 bg-yellow-100 px-2 py-1 text-sm font-medium text-yellow-800">
			<svg
				stroke="currentColor"
				fill="currentColor"
				stroke-width="0"
				viewBox="0 0 1024 1024"
				height="1rem"
				width="1rem"
				xmlns="http://www.w3.org/2000/svg"
			><path d="M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z"></path></svg>
			<span id="repo-stars"></span>
		</span>
	</a>
	<script>
		async function updateRepoStars() {
			const repoUrl = 'https://api.github.com/repos/leomorpho/GoShip'; // GitHub API URL for your repository

			try {
				const response = await fetch(repoUrl);
				if (!response.ok) {
				throw new Error('Network response was not ok');
				}

				const repoData = await response.json();
				const stars = repoData.stargazers_count; // Fetch the stargazers_count from the API response

				// Update the star count in the HTML
				const starElement = document.getElementById('repo-stars');
				starElement.innerHTML = `${stars}`;
			} catch (error) {
				console.error('Error fetching the repository stars:', error);
			}
		}

		// Call the function when the page loads
		updateRepoStars();
	</script>
}

templ features() {
	<div class="w-full py-8 px-4 md:px-6">
		<div class="max-w-3xl mx-auto">
			<div data-aos="fade-up" data-aos-once="true">
				<div
					class="pb-1 flex justify-center w-full font-black text-5xl md:text-6xl
                bg-gradient-to-r from-red-500 to-purple-500
                inline-block text-transparent bg-clip-text
                "
				>Features</div>
			</div>
			@GoshipFeatures()
		</div>
	</div>
}

templ builtWithGoShip() {
	<div class="w-full py-8 px-4 md:px-6">
		<div class="max-w-3xl mx-auto">
			<div data-aos="fade-up" data-aos-once="true">
				<div
					class="pb-1 flex justify-center w-full font-black text-5xl md:text-6xl
                bg-gradient-to-r from-red-500 to-purple-500
                inline-block text-transparent bg-clip-text
                "
				>Built With GoShip</div>
			</div>
			<a href="https://cherie.chatbond.app/" target="_blank" class="flex border-2 rounded-xl p-2 m-2 mouse-pointer">
				<picture class="m-2 flex justify-center items-center">
					<!-- Images for larger screens -->
					<source media="(min-width: 768px)" srcset="https://chatbond-static.s3.us-west-002.backblazeb2.com/cherie/pwa/v2/icons/logo-animated-md-350px.gif"/><!-- Images for medium screens -->
					<source media="(min-width: 640px)" srcset="https://chatbond-static.s3.us-west-002.backblazeb2.com/cherie/pwa/v2/icons/logo-animated-md-350px.gif"/><!-- Default image for smaller screens -->
					<img loading="lazy" src="https://chatbond-static.s3.us-west-002.backblazeb2.com/cherie/pwa/v2/icons/logo-animated-md-250px.gif" class="w-24 h-auto sm:w-32 md:w-40 my-5 md:mx-5" alt="Icon"/>
				</picture>
				<span class="hover:underline text-2xl md:text-3xl flex items-center"><span>Chérie: Your Relationship App</span></span>
			</a>
		</div>
	</div>
}

templ verticalSpacer(height string) {
	<div class={ height }></div>
}

templ newsletterRegistration(page *controller.Page) {
	if _, ok := page.Data.(types.LandingPage); ok {
		<div id="map-view" class="w-full">
			<div hx-get={ page.ToURL("emailSubscribe") } hx-swap="this" hx-trigger="load once"></div>
		</div>
	}
}

templ pricingForLandingPage(page *controller.Page, data types.LandingPage) {
	<div class="w-full py-2 px-2 md:px-5 mt-2">
		<div class="flex flex-col justify-center w-full">
			<div data-aos="fade-up" data-aos-once="true">
				<div
					class="pb-1 flex justify-center w-full font-black text-5xl md:text-6xl
                bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500
                inline-block text-transparent bg-clip-text
                "
				>Pricing</div>
			</div>
			@pricingCards(page, data.ProductProPrice, data.ProductProCode, nil, false)
		</div>
	</div>
}

templ QASection(questions []types.QAItem) {
	<div class="w-full py-8 px-4 md:px-6">
		<div class="max-w-3xl mx-auto">
			<div data-aos="fade-up" data-aos-once="true">
				<div
					class="pb-1 flex justify-center w-full font-black text-5xl md:text-6xl
                bg-gradient-to-r from-red-500 to-purple-500
                inline-block text-transparent bg-clip-text
                "
				>Q&A Section</div>
			</div>
			<div id="accordion-collapse" data-accordion="collapse">
				for _, qa := range questions {
					@qaIndividualSection(qa)
				}
			</div>
		</div>
	</div>
}

templ qaIndividualSection(qa types.QAItem) {
	<div
		class="collapsible mt-4 bg-slate-300 dark:bg-slate-800 text-slate-800 dark:text-white rounded-xl mouse-pointer"
		x-data="{ expanded: false }"
		x-cloak
	>
		<button
			@click="expanded = ! expanded"
			class="w-full p-2 flex items-center justify-center"
		>{ qa.Question }</button>
		<div
			x-show="expanded"
			x-collapse
			class="bg-slate-200 dark:bg-slate-900 text-slate-800 dark:text-white rounded-b-xl"
		>
			<div
				class="p-3 md:p-4"
			>
				{ qa.Answer }
			</div>
		</div>
	</div>
}

templ madeWithLove(d types.LandingPage) {
	<div class="w-full h-auto flex flex-col items-center justify-center md:flex-row md:items-center">
		<picture class="m-2">
			<!-- Images for larger screens -->
			<source media="(min-width: 768px)" srcset="https://goship-static.s3.us-west-002.backblazeb2.com/assets/goship.png"/>
			<!-- Images for medium screens -->
			<source media="(min-width: 640px)" srcset="https://goship-static.s3.us-west-002.backblazeb2.com/assets/goship.png"/>
			<!-- Default image for smaller screens -->
			<img
				loading="lazy"
				src="https://goship-static.s3.us-west-002.backblazeb2.com/assets/goship.png"
				class="w-24 h-auto sm:w-32 md:w-40 my-5 md:mx-5"
				alt="Icon"
			/>
		</picture>
		<div
			class="font-black text-4xl sm:text-5xl md:text-6xl m-3 md:mt-5 mb-5 text-center
        bg-gradient-to-r from-blue-500 via-green-500 to-indigo-500 dark:from-blue-400 dark:via-green-500 dark:to-indigo-400
        inline-block text-transparent bg-clip-text
        "
		>
			{ "Made With Sprinkles of Love and Tears of Frustration." }
		</div>
	</div>
}

templ socialMedia(d types.LandingPage) {
	<div
		class="w-full h-auto flex flex-wrap items-center justify-center md:flex-row md:items-center"
	>
		<!-- Tiktok handle -->
		<a
			href="https://www.tiktok.com/@chatbondhq"
			title="Go to tiktok page"
			target="_blank"
			rel="noopener noreferrer"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				width="24"
				height="24"
				viewBox="0 0 24 24"
				fill="currentColor"
				class="m-1 md:m-2 w-11 h-11 lg:w-16 lg:h-16 text-black dark:text-white fill-current"
			><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M16.083 2h-4.083a1 1 0 0 0 -1 1v11.5a1.5 1.5 0 1 1 -2.519 -1.1l.12 -.1a1 1 0 0 0 .399 -.8v-4.326a1 1 0 0 0 -1.23 -.974a7.5 7.5 0 0 0 1.73 14.8l.243 -.005a7.5 7.5 0 0 0 7.257 -7.495v-2.7l.311 .153c1.122 .53 2.333 .868 3.59 .993a1 1 0 0 0 1.099 -.996v-4.033a1 1 0 0 0 -.834 -.986a5.005 5.005 0 0 1 -4.097 -4.096a1 1 0 0 0 -.986 -.835z"></path></svg>
		</a>
		<!-- Threads handle -->
		<a
			href="https://twitter.com/chatbondhq"
			title="Go to Twitter/X page"
			target="_blank"
			rel="noopener noreferrer"
		>
			// Threads for when ready
			// <svg
			// 	xmlns="http://www.w3.org/2000/svg"
			// 	width="16"
			// 	height="16"
			// 	fill="currentColor"
			// 	class="m-1 md:m-2 w-12 h-12 lg:w-16 lg:h-16 text-black dark:text-white fill-current"
			// 	viewBox="0 0 16 16"
			// >
			// 	<path d="M6.321 6.016c-.27-.18-1.166-.802-1.166-.802.756-1.081 1.753-1.502 3.132-1.502.975 0 1.803.327 2.394.948s.928 1.509 1.005 2.644q.492.207.905.484c1.109.745 1.719 1.86 1.719 3.137 0 2.716-2.226 5.075-6.256 5.075C4.594 16 1 13.987 1 7.994 1 2.034 4.482 0 8.044 0 9.69 0 13.55.243 15 5.036l-1.36.353C12.516 1.974 10.163 1.43 8.006 1.43c-3.565 0-5.582 2.171-5.582 6.79 0 4.143 2.254 6.343 5.63 6.343 2.777 0 4.847-1.443 4.847-3.556 0-1.438-1.208-2.127-1.27-2.127-.236 1.234-.868 3.31-3.644 3.31-1.618 0-3.013-1.118-3.013-2.582 0-2.09 1.984-2.847 3.55-2.847.586 0 1.294.04 1.663.114 0-.637-.54-1.728-1.9-1.728-1.25 0-1.566.405-1.967.868ZM8.716 8.19c-2.04 0-2.304.87-2.304 1.416 0 .878 1.043 1.168 1.6 1.168 1.02 0 2.067-.282 2.232-2.423a6.2 6.2 0 0 0-1.528-.161"></path>
			// </svg>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				x="0px"
				y="0px"
				width="100"
				height="100"
				viewBox="0 0 50 50"
				class="m-1 md:m-2 w-12 h-12 lg:w-16 lg:h-16 text-black dark:text-white fill-current"
			>
				<path fill="currentColor" d="M 11 4 C 7.134 4 4 7.134 4 11 L 4 39 C 4 42.866 7.134 46 11 46 L 39 46 C 42.866 46 46 42.866 46 39 L 46 11 C 46 7.134 42.866 4 39 4 L 11 4 z M 13.085938 13 L 21.023438 13 L 26.660156 21.009766 L 33.5 13 L 36 13 L 27.789062 22.613281 L 37.914062 37 L 29.978516 37 L 23.4375 27.707031 L 15.5 37 L 13 37 L 22.308594 26.103516 L 13.085938 13 z M 16.914062 15 L 31.021484 35 L 34.085938 35 L 19.978516 15 L 16.914062 15 z"></path>
			</svg>
		</a>
		<!-- Instagram -->
		<a
			href="https://www.instagram.com/chatbondhq/"
			title="Go to Instagram page"
			target="_blank"
			rel="noopener noreferrer"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				x="0px"
				y="0px"
				width="100"
				height="100"
				viewBox="0 0 50 50"
				class="m-1 md:m-2 w-12 h-12 lg:w-16 lg:h-16 text-black dark:text-white fill-current"
			>
				<path fill="currentColor" d="M 12 3 C 7.04 3 3 7.04 3 12 L 3 38 C 3 42.96 7.04 47 12 47 L 38 47 C 42.96 47 47 42.96 47 38 L 47 12 C 47 7.04 42.96 3 38 3 L 12 3 z M 38 8 L 41 8 C 41.55 8 42 8.45 42 9 L 42 12 C 42 12.55 41.55 13 41 13 L 38 13 C 37.45 13 37 12.55 37 12 L 37 9 C 37 8.45 37.45 8 38 8 z M 25 10 C 30.33 10 35.019688 12.8 37.679688 17 L 42 17 L 42 37 C 42 39.76 39.76 42 37 42 L 13 42 C 10.24 42 8 39.76 8 37 L 8 17 L 12.320312 17 C 14.980313 12.8 19.67 10 25 10 z M 25 12 C 17.83 12 12 17.83 12 25 C 12 32.17 17.83 38 25 38 C 32.17 38 38 32.17 38 25 C 38 17.83 32.17 12 25 12 z M 25 16 C 29.96 16 34 20.04 34 25 C 34 29.96 29.96 34 25 34 C 20.04 34 16 29.96 16 25 C 16 20.04 20.04 16 25 16 z"></path>
			</svg>
		</a>
		<!-- Facebook -->
		<a
			href="https://www.facebook.com/profile.php?id=61554353831580"
			title="Go to Facebook page"
			target="_blank"
			rel="noopener noreferrer"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				x="0px"
				y="0px"
				width="100"
				height="100"
				viewBox="0 0 50 50"
				class="m-1 md:m-2 w-12 h-12 lg:w-16 lg:h-16 text-black dark:text-white fill-current"
			>
				<path fill="currentColor" d="M25,3C12.85,3,3,12.85,3,25c0,11.03,8.125,20.137,18.712,21.728V30.831h-5.443v-5.783h5.443v-3.848 c0-6.371,3.104-9.168,8.399-9.168c2.536,0,3.877,0.188,4.512,0.274v5.048h-3.612c-2.248,0-3.033,2.131-3.033,4.533v3.161h6.588 l-0.894,5.783h-5.694v15.944C38.716,45.318,47,36.137,47,25C47,12.85,37.15,3,25,3z"></path>
			</svg>
		</a>
		<!-- Email -->
		<a
			href={ templ.SafeURL(fmt.Sprintf("mailto:%s", d.ContactEmail)) }
			title="Email us"
			target="_blank"
			rel="noopener noreferrer"
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				x="0px"
				y="0px"
				width="100"
				height="100"
				viewBox="0 0 50 50"
				class="m-1 md:m-2 w-12 h-12 lg:w-16 lg:h-16 text-black dark:text-white fill-current"
			>
				<path fill="currentColor" d="M 14 4 C 8.4886661 4 4 8.4886661 4 14 L 4 36 C 4 41.511334 8.4886661 46 14 46 L 36 46 C 41.511334 46 46 41.511334 46 36 L 46 14 C 46 8.4886661 41.511334 4 36 4 L 14 4 z M 13 16 L 37 16 C 37.18 16 37.349766 16.020312 37.509766 16.070312 L 27.679688 25.890625 C 26.199688 27.370625 23.790547 27.370625 22.310547 25.890625 L 12.490234 16.070312 C 12.650234 16.020312 12.82 16 13 16 z M 11.070312 17.490234 L 18.589844 25 L 11.070312 32.509766 C 11.020312 32.349766 11 32.18 11 32 L 11 18 C 11 17.82 11.020312 17.650234 11.070312 17.490234 z M 38.929688 17.490234 C 38.979688 17.650234 39 17.82 39 18 L 39 32 C 39 32.18 38.979687 32.349766 38.929688 32.509766 L 31.400391 25 L 38.929688 17.490234 z M 20 26.410156 L 20.890625 27.310547 C 22.020625 28.440547 23.510234 29 24.990234 29 C 26.480234 29 27.959844 28.440547 29.089844 27.310547 L 29.990234 26.410156 L 37.509766 33.929688 C 37.349766 33.979688 37.18 34 37 34 L 13 34 C 12.82 34 12.650234 33.979687 12.490234 33.929688 L 20 26.410156 z"></path>
			</svg>
		</a>
	</div>
}

templ questionExample(questionType, prompt string) {
	<!-- Create type 1 question -->
	<div class=" w-full flex items-stretch rounded-lg">
		<a class="flex items-stretch">
			<div
				class={ "transition-colors duration-300 rounded-l-lg p-2 md:p-4 flex items-center", templ.KV("bg-violet-300 hover:bg-red-400", questionType == "matched"), templ.KV("bg-red-200 hover:bg-red-400", questionType != "matched") }
			>
				<span class="text-black w-4 sm:w-5 md:w-6 h-4 sm:h-5 md:h-6">
					<!-- Dislike icon -->
					<svg class="dislike-question-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
						<path d="M18.905 12.75a1.25 1.25 0 1 1-2.5 0v-7.5a1.25 1.25 0 0 1 2.5 0v7.5ZM8.905 17v1.3c0 .268-.14.526-.395.607A2 2 0 0 1 5.905 17c0-.995.182-1.948.514-2.826.204-.54-.166-1.174-.744-1.174h-2.52c-1.243 0-2.261-1.01-2.146-2.247.193-2.08.651-4.082 1.341-5.974C2.752 3.678 3.833 3 5.005 3h3.192a3 3 0 0 1 1.341.317l2.734 1.366A3 3 0 0 0 13.613 5h1.292v7h-.963c-.685 0-1.258.482-1.612 1.068a4.01 4.01 0 0 1-2.166 1.73c-.432.143-.853.386-1.011.814-.16.432-.248.9-.248 1.388Z"></path>
					</svg>
				</span>
			</div>
		</a>
		<!-- Question div -->
		<div
			class={ "bg-gradient-to-r flex-grow p-2 flex flex-col items-center", templ.KV("from-violet-300 to-yellow-100", questionType == "matched"), templ.KV("from-red-200 via-red-400 to-yellow-100", questionType != "matched") }
		>
			<div class="pr-2 flex m-3">
				if questionType == "matched" {
					@components.ToolTip("Waiting on your answer", "You can see their answer as soon as you publish your answer! 😊 ⏰️")
				} else {
					@components.ToolTip("New", "New daily question chosen for you 🐝")
				}
			</div>
			<span class="text-black md:text-lg">{ prompt }</span>
		</div>
		<!-- Arrow div -->
		<a class="flex items-stretch">
			<div class="p-2 md:p-4 flex items-center rounded-r-lg bg-yellow-200 hover:bg-green-400 transition-colors duration-300">
				<span class="text-black">
					<!-- Edit icon -->
					<svg
						xmlns="http://www.w3.org/2000/svg"
						viewBox="0 0 20 20"
						fill="currentColor"
						class="w-4 sm:w-5 md:w-6 h-4 sm:h-5 md:h-6"
					>
						<path d="m5.433 13.917 1.262-3.155A4 4 0 0 1 7.58 9.42l6.92-6.918a2.121 2.121 0 0 1 3 3l-6.92 6.918c-.383.383-.84.685-1.343.886l-3.154 1.262a.5.5 0 0 1-.65-.65Z"></path>
						<path d="M3.5 5.75c0-.69.56-1.25 1.25-1.25H10A.75.75 0 0 0 10 3H4.75A2.75 2.75 0 0 0 2 5.75v9.5A2.75 2.75 0 0 0 4.75 18h9.5A2.75 2.75 0 0 0 17 15.25V10a.75.75 0 0 0-1.5 0v5.25c0 .69-.56 1.25-1.25 1.25h-9.5c-.69 0-1.25-.56-1.25-1.25v-9.5Z"></path>
					</svg>
				</span>
			</div>
		</a>
	</div>
}

script landingPageJS() {
    function initAOS() {
        if (typeof AOS !== 'undefined') {
            AOS.init();
        }
    }
}
