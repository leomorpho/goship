package components

import (
	"fmt"
	"github.com/mikestefanello/pagoda/pkg/controller"
	"github.com/mikestefanello/pagoda/templates/helpers"
	"strings"
)

templ Metatags(page *controller.Page) {
	<title>
		{ page.AppName }
		if len(page.Title) > 0 {
			{ fmt.Sprintf("| %s", page.Title) }
		}
	</title>
	<link rel="icon" href={ helpers.File("favicon.png") }/>
	<meta charset="utf-8"/>
	<meta name="viewport" content="viewport-fit=cover, width=device-width, initial-scale=1.0, shrink-to-fit=no"/>
	<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	if len(page.Metatags.Description) > 0 {
		<meta name="description" content={ page.Metatags.Description }/>
	}
	if len(page.Metatags.Keywords) > 0 {
		<meta name="keywords" content={ strings.Join(page.Metatags.Keywords, ", ") }/>
	}
	<meta name="application-name" content="Goship"/>
	<meta name="msapplication-starturl" content="https://cherie.chatbond.app"/>
	<meta name="mobile-web-app-capable" content="yes"/>
	<meta name="apple-mobile-web-app-capable" content="yes"/>
	<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"/>
	<meta name="apple-mobile-web-app-title" content="Goship"/>
	<link rel="apple-touch-startup-image" href="ios-startup.png"/>
	<meta name="color-scheme" content="light dark"/>
	<meta name="description" content="Goship is a Go/HTMX starter kit here to help you get your idea to market before you can sneeze once."/>
}

templ CSS() {
	<link rel="stylesheet" href={ helpers.File("svelte_bundle.css") }/>
	<link rel="stylesheet" href={ helpers.File("styles_bundle.css") }/>
	<link rel="manifest" crossorigin="use-credentials" href={ helpers.File("manifest.json") }/>
	// Defer loading swiper styles (see https://www.giftofspeed.com/defer-loading-css/)
	// NOTE: removing `rel="preload"` for swiperjs below will break it (done it once before)
	<link rel="preload" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'"/>
	<noscript><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/></noscript>
	// Defer loading tippy styles
	<link rel="preload" href="https://unpkg.com/tippy.js@6/dist/tippy.css" as="style" onload="this.onload=null;this.rel='stylesheet'"/>
	<noscript><link rel="stylesheet" href="https://unpkg.com/tippy.js@6/dist/tippy.css"/></noscript>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/driver.js@1.0.1/dist/driver.css"/>
	
	// Below is for making ios status bar translucent: https://blog.alexwendland.com/2020-09-25-translucent-status-bar-in-pwas-on-ios/
	<style>
	body {
		background-color: transparent;
	}

	:root {
		--safe-area-top: env(safe-area-inset-top);
		--safe-area-left: env(safe-area-inset-left);
	}

	#navbar {
		padding-top: env(safe-area-inset-top);
		// padding-left: env(safe-area-inset-left);
		padding-right: 0; /* Adjust as needed */
		padding-bottom: 0; /* Adjust as needed */
	}
	</style>
}

templ JS() {
	// START PWA splash screen (TODO: not working lol)
	<script src="https://cdn.jsdelivr.net/npm/ios-pwa-splash@1.0.0/cdn.min.js"></script>
	<script id="dynamic-splash-screen" icon-url-data={ templ.JSONString(helpers.File("icon.png")) }>
		(function(){
			const dynamicSplashScreen = document.getElementById("dynamic-splash-screen");
			const iconURL = JSON.parse(dynamicSplashScreen.getAttribute("icon-url-data"));
			console.log(`setting up iosPWASpash with icon url ${iconURL}`)
			iosPWASplash(iconURL, "#000000");
		})()
	</script>
	// END PWA splash screen
	<script src={ helpers.File("main.js") }></script>
	<script src={ helpers.File("vanilla_bundle.js") }></script>
	// https://cdn.jsdelivr.net/npm/sweetalert2@11 is somehow not working (buttons not showing), so reverting to 2@10
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
	<script src={ helpers.ServiceWorkerFile("service-worker.js") }></script>
	<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
	<script src="https://unpkg.com/htmx.org@1.9.12/dist/ext/sse.js"></script>
	<script defer async src="https://cdn.jsdelivr.net/npm/@alpinejs/mask@3.x.x/dist/cdn.min.js"></script>
	<script defer async src="https://cdn.jsdelivr.net/npm/@ryangjchandler/alpine-clipboard@2.x.x/dist/alpine-clipboard.js" defer></script>
	<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"></script>
	<script defer async src="https://cdn.jsdelivr.net/npm/@marcreichel/alpine-timeago@latest/dist/alpine-timeago.min.js" defer></script>
	<script defer async src="https://cdn.jsdelivr.net/npm/@ryangjchandler/alpine-tooltip@1.x.x/dist/cdn.min.js" defer></script>
	// I added morph because I was facing this issue https://github.com/alpinejs/alpine/discussions/3985 with the home feed buttons. However, it did not fix it...but, 
	// people are suggesting to use it for htmx to play more nicely with Alpine, which is certainly a problem I've faced before. Leaving in the hopes it actually helps
	// with weird alpine/htmx bugs, but to revisit.
	<script defer async src="https://cdn.jsdelivr.net/npm/@alpinejs/morph@3.x.x/dist/cdn.min.js"></script>
	<script defer async src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
	<script defer async src="https://unpkg.com/hyperscript.org@0.9.12"></script>
	<script defer async src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
	<script defer async src="https://js.stripe.com/v3/"></script>
	// TODO: remove HTMX debug extension for prod
	// <script src="https://unpkg.com/htmx.org/dist/ext/debug.js"></script>
	<script defer async src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/datepicker.min.js"></script>
	// Calheatmap deps, note that the same ones are imported in cal_heatmap.js in static
	<script defer async src="https://cdn.jsdelivr.net/npm/dayjs@1/dayjs.min.js"></script>
	<script defer async src="https://d3js.org/d3.v7.min.js"></script>
	<script defer async src="https://unpkg.com/cal-heatmap/dist/cal-heatmap.min.js"></script>
	<script defer async src="https://unpkg.com/cal-heatmap/dist/plugins/Legend.min.js"></script>
	<script defer async src="https://unpkg.com/cal-heatmap/dist/plugins/Tooltip.min.js"></script>
	<script defer async src="https://unpkg.com/cal-heatmap/dist/plugins/CalendarLabel.min.js"></script>
	<script defer async src="https://unpkg.com/@popperjs/core@2"></script>
	// Cannot defer driver.js
	<script src="https://cdn.jsdelivr.net/npm/driver.js@1.0.1/dist/driver.js.iife.js"></script>
	// above are Calheatmap deps
	@darkModeSwitcher()
}

script sentrySessionReplay() {
	<script defer async 
	src="https://js.sentry-cdn.com/1a4df3451703a57a67ad24c6c517a50c.min.js"
	crossorigin="anonymous"
	></script>
}

script darkModeSwitcher() {
	// On page load or when changing themes, best to add inline in `head` to avoid FOUC
    if (localStorage.getItem('color-theme') === 'darkmode' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark'); // For default tailwind dark: utility
		document.documentElement.setAttribute('data-theme', 'darkmode'); // For daisyui theme
		// Set the hover brightness dynamically
		document.documentElement.style.setProperty('--brightness-hover', 'var(--brightness-hover-dark)');
    } else {
        document.documentElement.classList.remove('dark') // For default tailwind dark: utility
		document.documentElement.setAttribute('data-theme', 'lightmode'); // For daisyui theme
		// Set the hover brightness dynamically
		document.documentElement.style.setProperty('--brightness-hover', 'var(--brightness-hover-light)');
    }
}

script csrfJS(token string) {
    document.body.addEventListener('htmx:configRequest', function(evt)  {
        if (evt.detail.verb !== "get") {
            evt.detail.parameters['csrf'] = token;
        }
    })
}

script htmxBeforeSwap() {
    document.body.addEventListener('htmx:beforeSwap', function(evt) {
        if (evt.detail.xhr.status >= 400){
            evt.detail.shouldSwap = true;
            evt.detail.target = htmx.find("body");
        }
    });
}

templ JSFooter(page *controller.Page) {
	if len(page.CSRF) > 0 {
		@csrfJS(page.CSRF)
	}
	@htmxBeforeSwap()
	@htmxOnLoad()
	// @htmxWindowOnLoad()
	@beforeBodyEnd()
	<script>
		function handleCacheUpdate(event) {
			const url = new URL(event.detail.requestConfig.url, location.origin);
			if (navigator.serviceWorker && navigator.serviceWorker.controller) {
				navigator.serviceWorker.controller.postMessage({
				type: "CACHE_UPDATED",
				url: url.href,
				});
			}
		}
		function handleCacheUpdateWithURL(url) {
			if (navigator.serviceWorker && navigator.serviceWorker.controller) {
			navigator.serviceWorker.controller.postMessage({
				type: 'CACHE_UPDATE',
				url: url
			});
			}
		}
	</script>
}

script htmxOnLoad() {
	htmx.onLoad(function(content) {
		initializeJS();
	});	
	
}

script htmxWindowOnLoad() {
// Was trying to get CTRL/CMD + Click to work, but still not working. HTMX uses hx-get instead of href,
// which confuses browsers. https://www.joncom.be/notes/htmx-ctrl-click/

	window.onload = function () {
		htmx.on{'htmx:configRequest', (evt) => {
			const requestType = evt.detail.verb;
			const ctrlKey = evt.detail.triggeringEvent?.ctrlKey;
			const pushUrl = evt.target.attributes['hx-push-url']?.value;

			if (requestType === 'get' && ctrlKey && pushUrl) {
				evt.preventDefault();
				window.open(pushUrl, '_blank');
			}
		}
		}
	}
}

templ beforeBodyEnd() {
	<script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.2.1/flowbite.min.js"></script>
}

templ TextFooter(page *controller.Page) {
	<div class="mx-1 sm:mx-2 py-3">
		<footer class="bg-slate-100 dark:bg-gray-800 rounded-lg shadow m-4">
			<div class="w-full mx-auto max-w-screen-xl p-4 md:flex md:items-center md:justify-between">
				<span class="text-sm text-gray-500 sm:text-center dark:text-gray-400">
					© <span id="currentYear"></span> <a href="https://cherie.chatbond.app" class="hover:underline">Chatbond Inc</a>. All Rights Reserved.
				</span>
				<ul
					hx-target="#main-content"
					hx-select="#main-content"
					hx-indicator="next #page-loading"
					hx-swap="outerHTML show:window:top"
					hx-push-url="true"
					class="flex flex-wrap items-center mt-3 text-sm font-medium text-gray-500 dark:text-gray-400 sm:mt-0"
				>
					<li>
						<a
							hx-get={ page.ToURL("about") }
							class="hover:underline me-4 md:me-6 cursor-pointer"
						>
							Contact Us
						</a>
					</li>
					<li>
						<a
							hx-get={ page.ToURL("privacy_policy") }
							class="hover:underline me-4 md:me-6 cursor-pointer"
						>
							Privacy Policy
						</a>
					</li>
				</ul>
			</div>
		</footer>
	</div>
	<script>
		document.getElementById('currentYear').textContent = new Date().getFullYear();
	</script>
}
