package components

import (
	"github.com/mikestefanello/pagoda/pkg/controller"
	"github.com/mikestefanello/pagoda/pkg/routing/routenames"
)

templ Navbar(page *controller.Page) {
	<nav
		id="navbar"
		if page.IsAuth && page.IsFullyOnboarded {
			hx-ext="sse"
			sse-connect={ page.ToURL(routenames.RouteNameRealtime) }
		}
		class="bg-primary/80 text-primary-content backdrop-blur-md"
		hx-target="#main-content"
		hx-select="#main-content"
		hx-swap="outerHTML show:window:top"
		hx-indicator="next #page-loading"
		hx-push-url="true"
	>
		<div class="container mx-auto px-4 py-2 flex justify-between items-center">
			<a id="navbar-logo-with-brand" href={ templ.URL(page.ToURL(routenames.RouteNameLandingPage)) } class="flex items-center space-x-3 font-mono">
				<img src="/files/favicon.png" class="h-8" alt="Logo"/>
				<span class="text-2xl font-semibold">{ page.AppName }</span>
			</a>
			// TODO
			<div class="hidden md:flex items-center space-x-4">
				if !page.IsIosDevice {
					@NavbarPWAMobileInstallButton(page)
				}
				// TODO: only show this once documentation is ready
				// @DocsButton(page)
				if page.IsAuth && page.IsFullyOnboarded {
					<a
						hx-get={ page.ToURL(routenames.RouteNameHomeFeed) }
						class="flex items-center p-2 w-10 h-10 bg-slate-200 hover:bg-slate-300 dark:hover:bg-slate-600 dark:bg-slate-500 rounded-full mx-2 flex items-center justify-center relative cursor-pointer"
						id="meet"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
							<path fill-rule="evenodd" d="M9.293 2.293a1 1 0 0 1 1.414 0l7 7A1 1 0 0 1 17 11h-1v6a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6H3a1 1 0 0 1-.707-1.707l7-7Z" clip-rule="evenodd"></path>
						</svg>
					</a>
					if !page.IsAuth {
						<a
							hx-get={ page.ToURL(routenames.RouteNameAboutUs) }
							class="flex items-center p-2 rounded-lg hover:bg-slate-300 dark:hover:bg-slate-600 group cursor-pointer"
							id="meet"
						>
							<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
								<path fill-rule="evenodd" d="M18 10a8 8 0 1 1-16 0 8 8 0 0 1 16 0Zm-7-4a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM9 9a.75.75 0 0 0 0 1.5h.253a.25.25 0 0 1 .244.304l-.459 2.066A1.75 1.75 0 0 0 10.747 15H11a.75.75 0 0 0 0-1.5h-.253a.25.25 0 0 1-.244-.304l.459-2.066A1.75 1.75 0 0 0 9.253 9H9Z" clip-rule="evenodd"></path>
							</svg>
							<span class="ml-1">{ "Contact Us" }</span>
						</a>
					}
				} else {
					<a
						href={ templ.URL(page.ToURL(routenames.RouteNameLandingPage)) }
						class="flex items-center p-2 w-10 h-10 bg-slate-200 hover:bg-slate-300 dark:hover:bg-slate-600 dark:bg-slate-500 rounded-full mx-2 flex items-center justify-center relative cursor-pointer"
						id="meet"
					>
						<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
							<path fill-rule="evenodd" d="M9.293 2.293a1 1 0 0 1 1.414 0l7 7A1 1 0 0 1 17 11h-1v6a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6H3a1 1 0 0 1-.707-1.707l7-7Z" clip-rule="evenodd"></path>
						</svg>
					</a>
				}
			</div>
			<div
				class="flex items-center"
			>
				<div class="mr-5">
					@BlogButton()
				</div>
				@ThemeToggle("navbar-theme-toggle")
				if page.IsAuth && page.IsFullyOnboarded {
					<div
						class="flex relative items-center"
					>
						<div
							id="notifications-navbar"
							class="w-10 h-10 bg-slate-200 hover:bg-slate-300 dark:hover:bg-slate-600 dark:bg-slate-500 rounded-full mx-2 flex items-center justify-center relative cursor-pointer"
							hx-get={ page.ToURL("normalNotifications") }
						>
							<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-6 h-6">
								<path
									fill-rule="evenodd"
									d="M10 2a6 6 0 0 0-6 6c0 1.887-.454 3.665-1.257 5.234a.75.75 0 0 0 .515 1.076 32.91 32.91 0 0 0 3.256.508 3.5 3.5 0 0 0 6.972 0 32.903 32.903 0 0 0 3.256-.508.75.75 0 0 0 .515-1.076A11.448 11.448 0 0 1 16 8a6 6 0 0 0-6-6ZM8.05 14.943a33.54 33.54 0 0 0 3.9 0 2 2 0 0 1-3.9 0Z"
									clip-rule="evenodd"
								></path>
							</svg>
							<span
								hx-disinherit="*"
							>
								<span
									hx-get={ page.ToURL("normalNotificationsCount") }
									hx-trigger="sse:update_num_notifs,load"
									hx-swap="innerHTML"
									hx-target="this"
									hx-select="span"
									hx-push-url="false"
									id="normal-notifications-count-navbar"
									class="absolute -top-1 -right-1 inline-flex items-center justify-center px-1 text-xs font-medium text-white bg-red-600 rounded-full"
								></span>
							</span>
						</div>
					</div>
				}
				if page.IsAuth {
					<div
						x-data="{ open: false }"
						x-cloak
						class="relative"
					>
						<button
							id="navbar-profile-menu"
							type="button"
							class={ "cursor-pointer",
						templ.KV("w-10 h-10 bg-slate-200 hover:bg-slate-300 dark:hover:bg-slate-600 dark:bg-slate-500 rounded-full mx-2 flex items-center justify-center relative", page.IsAuth) ,
						templ.KV("flex items-center p-2 rounded-lg hover:bg-slate-300 dark:hover:bg-slate-600 group cursor-pointer", page.IsAuth == false) }
							@click="open = !open"
						>
							if page.AuthUserProfilePicURL != "" {
								<img class="w-10 h-10 rounded-full" src={ page.AuthUserProfilePicURL } alt="User photo"/>
							}
							<div class="absolute -bottom-0 -right-0 w-4 h-4 bg-slate-200 dark:bg-slate-500 rounded-full z-50 flex items-center justify-center">
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3">
									<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5"></path>
								</svg>
							</div>
						</button>
						// <div>
						<!-- Dropdown Menu -->
						<div
							x-show="open"
							@click.away="open = false"
							class="absolute right-0 mt-5 py-2 w-48 rounded-md shadow-xl z-20 bg-slate-200 dark:bg-slate-700"
						>
							<div class="px-4 py-3">
								<span class="text-sm text-ellipsis overflow-hidden whitespace-nowrap overflow-ellipsis max-w-full block">
									{ page.AuthUser.Name }
								</span>
								<span class="text-sm text-ellipsis overflow-hidden whitespace-nowrap overflow-ellipsis max-w-full block">
									{ page.AuthUser.Email }
								</span>
							</div>
							<ul class="py-2">
								if page.IsFullyOnboarded {
									<li>
										<a
											@click="open = false"
											hx-get={ page.ToURL(routenames.RouteNameProfile) }
											class="block px-4 py-2 text-sm hover-brightness hover:dark:bg-gray-700 cursor-pointer"
										>Profile</a>
									</li>
								}
								<li>
									<a
										@click="open = false"
										hx-get={ page.ToURL(routenames.RouteNamePreferences) }
										class="block px-4 py-2 text-sm hover-brightness hover:dark:bg-gray-700 cursor-pointer"
									>Settings</a>
								</li>
								<li>
									<a
										@click="open = false"
										href={ templ.URL(page.ToURL(routenames.RouteNameLogout)) }
										class="block px-4 py-2 text-sm hover-brightness hover:dark:bg-gray-700 cursor-pointer"
									>Sign out</a>
								</li>
							</ul>
						</div>
					</div>
				} else {
					<div class="block sticky flex flex-row justify-center items-center m-2">
						<div class="w-32">
							@LogInButton(page, "p-1")
						</div>
					</div>
				}
			</div>
		</div>
	</nav>
}

templ LogInButton(page *controller.Page, btnClasses string) {
	<button
		class={ "bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 text-white font-medium rounded-full flex justify-center items-center w-full", btnClasses }
		hx-get={ page.ToURL(routenames.RouteNameLogin) }
		hx-target="#main-content"
		hx-select="#main-content"
		hx-swap="outerHTML show:window:top"
		hx-indicator="next #page-loading"
		hx-push-url="true"
	>
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="currentColor"
			class="icon icon-tabler icons-tabler-filled icon-tabler-key w-5 h-5 mr-1 sm:mr-2"
		><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14.52 2c1.029 0 2.015 .409 2.742 1.136l3.602 3.602a3.877 3.877 0 0 1 0 5.483l-2.643 2.643a3.88 3.88 0 0 1 -4.941 .452l-.105 -.078l-5.882 5.883a3 3 0 0 1 -1.68 .843l-.22 .027l-.221 .009h-1.172c-1.014 0 -1.867 -.759 -1.991 -1.823l-.009 -.177v-1.172c0 -.704 .248 -1.386 .73 -1.96l.149 -.161l.414 -.414a1 1 0 0 1 .707 -.293h1v-1a1 1 0 0 1 .883 -.993l.117 -.007h1v-1a1 1 0 0 1 .206 -.608l.087 -.1l1.468 -1.469l-.076 -.103a3.9 3.9 0 0 1 -.678 -1.963l-.007 -.236c0 -1.029 .409 -2.015 1.136 -2.742l2.643 -2.643a3.88 3.88 0 0 1 2.741 -1.136m.495 5h-.02a2 2 0 1 0 0 4h.02a2 2 0 1 0 0 -4"></path></svg>
		<div>Log in</div>
	</button>
}

templ HomeButton(page *controller.Page, btnClasses string) {
	<a href={ templ.URL(page.ToURL(routenames.RouteNameLandingPage)) }>
		<button
			class={ "bg-gradient-to-r from-pink-500 via-red-500 to-yellow-500 text-white font-medium rounded-full flex justify-center items-center w-full", btnClasses }
		>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				viewBox="0 0 20 20"
				fill="currentColor"
				class="w-5 h-5 mr-1 sm:mr-2"
			>
				<path fill-rule="evenodd" d="M9.293 2.293a1 1 0 0 1 1.414 0l7 7A1 1 0 0 1 17 11h-1v6a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6H3a1 1 0 0 1-.707-1.707l7-7Z" clip-rule="evenodd"></path>
			</svg>
			<div>Home</div>
		</button>
	</a>
}

templ FloatingActionButton(page *controller.Page) {
	<a href={ templ.URL(page.ToURL(routenames.RouteNameLandingPage)) }>
		<div class="group fixed top-0 right-0 p-2 flex items-end justify-end w-16 h-16 z-50">
			<!-- main -->
			<div class="text-white shadow-xl flex items-center justify-center p-3 rounded-full bg-gradient-to-r from-cyan-500 to-blue-500 z-50 absolute  ">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					viewBox="0 0 20 20"
					fill="currentColor"
					class="w-6 h-6 group-hover:rotate-10 transition  transition-all duration-[0.6s]"
				>
					<path fill-rule="evenodd" d="M9.293 2.293a1 1 0 0 1 1.414 0l7 7A1 1 0 0 1 17 11h-1v6a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-6H3a1 1 0 0 1-.707-1.707l7-7Z" clip-rule="evenodd"></path>
				</svg>
			</div>
		</div>
	</a>
}

templ DocsButton(page *controller.Page) {
	<a
		href={ templ.URL(page.ToURL(routenames.RouteNameDocs)) }
		class="flex items-center w-9 h-9 lg:w-fit lg:h-8 lg:px-4 bg-slate-200 hover:bg-slate-300 dark:hover:bg-slate-600 dark:bg-slate-500 rounded-full mx-2 flex items-center justify-center relative cursor-pointer"
		id="meet"
	>
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="24"
			height="24"
			viewBox="0 0 24 24"
			fill="none"
			stroke="currentColor"
			stroke-width="2"
			stroke-linecap="round"
			stroke-linejoin="round"
			class="w-5 h-5"
		>><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M3 4.984h2"></path><path d="M8 4.984h2.5"></path><path d="M14.5 4.984h2.5"></path><path d="M22 4.984h-2"></path><path d="M4 4.984l5.455 14.516l6.545 -14.516"></path><path d="M9 4.984l6 14.516l6 -14.516"></path></svg>
		<span class="hidden lg:block ml-1">Docs</span>
	</a>
}

templ BlogButton() {
	<a
		href="https://tobyluxembourg.com/tags/ch%C3%A9rie"
		id="blog-header-menu-item"
		target="_blank"
	>
		<div class="flex flex-col justify-center">
			<div class="flex w-full items-center justify-center">
				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 lucide lucide-book-open-text-icon lucide-book-open-text"><path d="M12 7v14"></path><path d="M16 12h2"></path><path d="M16 8h2"></path><path d="M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z"></path><path d="M6 12h2"></path><path d="M6 8h2"></path></svg>
			</div>
			<div class="text-xs">Blog</div>
		</div>
	</a>
}
